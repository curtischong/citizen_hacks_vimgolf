// Part 8: Handling Logistics

let count_dietary_restrictions = (applications) => {
  let n = applications.length;
  let restrictions = new Map();
  for(let i = 0; i < n; i++){
    let application = applications[i];
    let diet_restriction = application.dietary_restriction;
    let restriction_count = restrictions.has(diet_restriction) ? restrictions.get(diet_restriction) + 1) : 0;
    restrictions.set(diet_restriction, restriction_count);
  }
  return restrictions;
}

let dietary_restrictions = count_dietary_restrictions(applications);
team.factorFood(dietary_restrictions);

let get_applicants_need_bus = (schools) => {
  const {Client} = require('pg');
  const applicant_db = new Client();
  await applicant_db.connect();


  const res = await applicant_db.query('SELECT * FROM applications WHERE school = $1', schools);
  await client.end()
  return res.rows;
}

let send_bus_to_schools = ['Waterloo'];
bus_applicants = get_applicants_need_bus(send_bus_to_schools);
team.send_bus_email(bus_applicants);