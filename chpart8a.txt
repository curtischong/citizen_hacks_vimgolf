// Part 8: Handling Logistics

let count_dietary_restrictions = (applications) => {
  let n = applications.length;
  let restrictions = new Map()
  for(let i = 0; i < n; i++){
    let application = applications[i];
    let diet_restriction = application.dietary_restriction;
    if(restrictions.has(diet_restriction)){
      restrictions.set(diet_restriction, restrictions.get(diet_restriction) + 1);
    }else{
      restrictions.set(diet_restriction, 0);
    }
  }
  return restrictions;
}

let dietary_restrictions = count_dietary_restrictions(applications);
team.factorFood(dietary_restrictions);

let handle_buses = () => {
  const {Client} = require('pg');
  const applicant_db = new Client();
  await applicant_db.connect();

  let send_bus_to_schools = ['Waterloo'];

  const res = await applicant_db.query('SELECT * FROM applications WHERE school = $1', send_bus_to_schools);
  bus_applicants = res.rows;
  team.send_bus_email(bus_applicants);
  await client.end()
}

handle_buses();